* Dotfile Literate Configuration

This config is (so far) only for an MX Apple silicon machine.
Here in _the garden_ lies my digital self, amongst the bees and tings and flowers... and the wall...

Some aspects (hardware, talon) don't depend on Apple computer.
I includeese aspects here too -- dey considered part o my `config`.

Welcome to this document. It's written in the style of `literate programming`. (shout out Donald Knuth)
This document is an `Org` file. It ends with ".org". It's a mix of writing and code. Just some symbols...
For settin up me macheens, this file actively works as the "single source of truth".
Anytime I touch [configure] [change something] it is written --- here.

If ur readin in HTML browser, u only see de /basic/ code block.
irl (in emacs) the code blocks are *linked* to certain files. (aka `tangled`, ie automatic export)
You gotta read it in emacs to really see. One of these lifetimes, emacs will find you.

The tangle of code within these writings... It feels...
...as Donald said: [I'm paraphrasing]
#+begin_src
    your code should tell a story
#+end_src

** Tools
*** hands & keyboard
Before install anyting... check ya hands an keys.
**** hands
touch type 1.0 accuracy. slow
backspace === push/pull-up
**** keyboards
***** adv360
no cap labels. let the keys come to you
home-row-mods
colemak-dh

Customization of the Kinesis Advantage 360 is in a separate repository:
https://github.com/antoaenono/key-zmk-adv360pro
***** built-in keeb
Handled below due to sequential nature of `tangle`.

*** voice, face, eyes, body
talon

** Install
*** Homebrew
...RIP MacPorts..? I'm too late to the game.

#+begin_src shell :tangle "install-prerequisites.sh"
echo "Install `homebrew` via blindly trusting script..."
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#+end_src

**** Notes on the install script
- creates a bunch of dirs
- installs xcode command line tools
- need to hit return to continue
- output message after installing xcode:
Run these commands in your terminal to add Homebrew to your PATH:
echo >> /Users/antoaenono/.zprofile
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/antoaenono/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"
- Run brew help to get started
- Further documentation:
https://docs.brew.sh
- type `brew` or `man brew` to learn more

*** chezmoi
#+begin_src shell :tangle "install-prerequisites.sh"
brew install chezmoi
#+end_src

*** dotfiles
#+begin_src shell :tangle "install-prerequisites.sh"
git clone github.com/antoaenono/dotfiles.git ~/.local/share/chezmoi
#+end_src

***

*** bitwarden
**** SSH agent
This environment variable needs to be set to defer to Bitwarden's SSH agent on `commit` and `push`.
#+begin_src shell
export SSH_AUTH_SOCK=/Users/antoaenono/Library/Containers/com.bitwarden.desktop/Data/.bitwarden-ssh-agent.sock
#+end_src

*** aerospace
#+begin_src shell
brew tap nikitabobko/aerospace
brew install --cask nikitabobko/tap/aerospace
#+end_src

*** emacs
**** mac standalone application
https://github.com/jimeh/emacs-builds
#+begin_src
brew tap jimeh/emacs-builds
brew install --cask jimeh/emacs-builds/emacs-app
#+end_src

**** doom
***** add `doom` command to PATH
in zshrc:
#+begin_src shell
# add `doom` helper command to PATH
export PATH="$HOME/.emacs.d/bin:$PATH"
echo "`doom` added to path: eg `doom sync`"
#+end_src

*** ollama
**** homebrew
***** CLI only
#+begin_src shell
brew install ollama
#+end_src
***** GUI
#+begin_src shell
brew install --cask ollama-app
#+end_src
**** official installer from website
  https://ollama.com/download
  installs both CLI and GUI


** Configure
*** built-in keeb
#+begin_src shell
# colemak-dh was originally called -dhm, now the m is implied.
# we want the ISO version (z is bottom left)
echo "homebrew: colemak-dh keyboard variant"
brew install --cask colemak-dh
#+end_src

*** git
**** aliases

*** github
**** SSH
***** authentication
***** signing
